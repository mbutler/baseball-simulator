function U(z){let q=/<!--([\s\S]*?)-->/g,A=[],y;while((y=q.exec(z))!==null)A.push(y[1]);return A}function V(z,q){let A=new DOMParser;for(let y of z)if(y.includes(`id="${q}"`))return A.parseFromString(y,"text/html").querySelector(`table#${q}`)||null;return null}function N(z){let q=document.createElement("div");q.style.display="none",document.body.appendChild(q),q.innerHTML=z;let A=q.querySelector("table#players_standard_batting"),y=q.querySelector("table#players_standard_pitching"),D=U(z),G=V(D,"players_standard_fielding");return q.remove(),{batting:A,pitching:y,fielding:G}}function J(z,q,A=5){if(!z){console.log(`${q}: ❌ missing`);return}let y=z.querySelectorAll("tbody tr");console.log(`\uD83D\uDCCA ${q} preview (${Math.min(y.length,A)} rows):`);for(let D=0;D<Math.min(y.length,A);D++){let G=y[D],K=G.querySelector("th"),O=K?K.textContent.trim():"(no name)",Q=Array.from(G.querySelectorAll("td")).map((S)=>S.textContent.trim());console.log(`   - ${D+1}: [${O}, ${Q.slice(0,4).join(", ")} ...]`)}}async function W(){try{let q=await(await fetch("./data/CHC-2025.html")).text();console.log("\uD83C\uDF10 Loaded team HTML");let{batting:A,pitching:y,fielding:D}=N(q);console.log("\uD83E\uDDEA Table detection:"),console.log("   batting:",A?"✅ found":"❌ missing"),console.log("   pitching:",y?"✅ found":"❌ missing"),console.log("   fielding:",D?"✅ found":"❌ missing"),J(A,"Batting"),J(y,"Pitching"),J(D,"Fielding")}catch(z){console.error("❌ Error loading team HTML:",z)}}W();
