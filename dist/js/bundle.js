function g(V){const J=/<!--([\s\S]*?)-->/g,Q=[];let U;while((U=J.exec(V))!==null)Q.push(U[1]);return Q}function H(V,J){const Q=new DOMParser;for(let U of V)if(U.includes(`id="${J}"`))return Q.parseFromString(U,"text/html").querySelector(`table#${J}`)||null;return null}function j(V){const J=document.createElement("div");J.style.display="none",document.body.appendChild(J),J.innerHTML=V;const Q=J.querySelector("table#players_standard_batting"),U=J.querySelector("table#players_standard_pitching"),q=g(V),Y=H(q,"players_standard_fielding");return J.remove(),{batting:Q,pitching:U,fielding:Y}}function x(V){if(!V||!V.href)return null;const J=V.href.match(/\/players\/.\/([^/.]+)\.shtml/);return J?J[1]:null}function I(V){return V.toLowerCase().replace(/[^a-z0-9]/g,"").slice(0,12)}function v(V){if(!V)return[];const J=Array.from(V.querySelectorAll("tbody > tr")).filter((q)=>!q.classList.contains("thead")),Q=Array.from(V.querySelectorAll("thead tr th")).map((q)=>q.textContent.trim()),U=[];for(let q of J){const Y=[q.querySelector("th"),...q.querySelectorAll("td")];if(Y.length!==Q.length)continue;const Z={};for(let X=0;X<Q.length;X++){const K=Q[X],_=Y[X];if(X===0){let $=_.textContent.trim(),D=_.querySelector("a"),N=x(D);if(/^\d+$/.test($)){const z=q.querySelector("td");$=z?.textContent.trim()||"(unknown)",D=z?.querySelector("a"),N=x(D)||N}Z.name=$,Z.player_id=N||I($)}else{const $=_.textContent.trim(),D=Number($.replace(/,/g,""));Z[K]=isNaN(D)?$:D}}U.push(Z)}return U}function A(V){return V.map((J)=>{const Q=Number(J.PA)||0,U=Number(J.AB)||0,q=Number(J.H)||0,Y=Number(J.HR)||0,Z=Number(J.BB)||0,X=Number(J.SO)||0,K=Number(J.SF)||0,_=Number(J.HBP)||0,$=Number(J["2B"])||0,D=Number(J["3B"])||0,N=q-$-D-Y,z=U-X-Y+K,G=z>0?(q-Y)/z:null,E=Q>0?X/Q:null,O=Q>0?Z/Q:null,C=Q>0?Y/Q:null;return{name:J.name,player_id:J.player_id,PA:Q,stats:{H:q,HR:Y,BB:Z,SO:X,SF:K,HBP:_,singles:N,doubles:$,triples:D},rates:{kRate:E,bbRate:O,hrRate:C,BABIP:G}}})}function F(V){return V.map((J)=>{const Q=Number(J.IP)||0,U=Number(J.TBF)||0,q=Number(J.H)||0,Y=Number(J.HR)||0,Z=Number(J.BB)||0,X=Number(J.SO)||0,K=Number(J.HBP)||0,_=U>0?X/U:null,$=U>0?Z/U:null,D=U>0?Y/U:null,N=U-X-Y-Z-K,z=N>0?(q-Y)/N:null;return{name:J.name,player_id:J.player_id,TBF:U,stats:{IP:Q,H:q,HR:Y,BB:Z,SO:X,HBP:K},rates:{kRate:_,bbRate:$,hrRate:D,BABIP:z}}})}function M(V,J,Q,U){const q=V.map((X)=>{const K=Q.find((_)=>_.player_id===X);if(!K)throw new Error(`Lineup player not found: ${X}`);return K}),Y=U.find((X)=>X.player_id===J);if(!Y)throw new Error(`Starting pitcher not found: ${J}`);const Z=new Set;for(let X of q){if(Z.has(X.player_id))throw new Error(`Duplicate player in lineup: ${X.player_id}`);Z.add(X.player_id)}if(Z.has(J))throw new Error(`Pitcher also appears in lineup: ${J}`);return{lineup:q,pitcher:Y}}function L(V,J){return(V+J)/2}function y(V,J){const Q=V.rates||{},U=J.rates||{},q=V.stats||{},Y=L(Q.kRate??0,U.kRate??0),Z=L(Q.bbRate??0,U.bbRate??0),X=L(Q.hrRate??0,U.hrRate??0),K=L(Q.BABIP??0.29,U.BABIP??0.29),_=(q.HBP??0)/(V.PA||1),$=Y+Z+_+X,D=Math.max(0,1-$),N=K*D,z=D-N,G=(q.singles??0)+(q.doubles??0)+(q.triples??0),E=G>0?(q.singles??0)/G:0.7,O=G>0?(q.doubles??0)/G:0.2,C=G>0?(q.triples??0)/G:0.1;return{K:Y,BB:Z,HBP:_,HR:X,"1B":N*E,"2B":N*O,"3B":N*C,Out:z}}function f(V){const{lineup:J,pitcher:Q}=V;return J.map((U)=>{const q=y(U,Q);return{batter_id:U.player_id,pitcher_id:Q.player_id,probabilities:q}})}function W(V){const J=Object.values(V).reduce((U,q)=>U+q,0);let Q=Math.random()*J;for(let[U,q]of Object.entries(V))if((Q-=q)<=0)return U;return Object.keys(V).pop()}function k(V){if(V==="Out"){const J=W(R),Q=W(B[J]);return`${J} to ${Q}`}return V}var R={Groundout:0.45,Flyout:0.3,Lineout:0.15,Popout:0.1},B={Groundout:{"1B":0.2,"2B":0.2,SS:0.25,"3B":0.2,P:0.15},Flyout:{LF:0.35,CF:0.45,RF:0.2},Lineout:{"1B":0.25,"2B":0.25,SS:0.25,"3B":0.25},Popout:{C:0.3,"1B":0.2,"2B":0.15,SS:0.2,"3B":0.15}};function T(){return{inning:1,top:!0,outs:0,bases:[0,0,0],lineupIndices:[0,0],score:[0,0]}}function w(V,J){let Q=0;const U=[0,0,0];for(let q=2;q>=0;q--){if(!V[q])continue;const Y=q+(J==="1B"?1:J==="2B"?2:J==="3B"?3:4);if(Y>=4)Q++;else U[Y-1]=1}if(["1B","2B","3B"].includes(J)){const q={"1B":0,"2B":1,"3B":2}[J];U[q]=1}return[U,Q]}function S(V,J,Q){const U=Q.top?0:1,q=U===0?V:J,Y=Q.lineupIndices[U],Z=q[Y%q.length],X=W(Z.probabilities),K=k(X);if(Q.lineupIndices[U]++,X==="Out"||X==="K")Q.outs++;else if(X==="BB"||X==="HBP"){const[_,$]=w(Q.bases,"1B");Q.bases=_,Q.score[U]+=$}else{const[_,$]=w(Q.bases,X);Q.bases=_,Q.score[U]+=$}return{batter_id:Z.batter_id,outcome:K}}async function P(V){const Q=await(await fetch(`./data/${V}`)).text(),{batting:U,pitching:q}=j(Q),Y=v(U),Z=v(q),X=A(Y),K=F(Z),_=X.map((D)=>D.player_id).filter((D,N,z)=>D&&z.indexOf(D)===N).slice(0,9),$=K.find((D)=>D.player_id)?.player_id;if(!$)throw new Error("No valid pitcher found");return M(_,$,X,K)}async function d(){try{const V=await P("CHC-2025.html"),J=await P("MIL-2025.html"),Q=f(V),U=f(J),q=T();console.log("\u26BE Starting simulation: MIL (away) vs CHC (home)");while(!0){if(!q.top&&q.inning>=9&&q.score[1]>q.score[0])break;const Y=q.top?U:Q,Z=q.top?"MIL":"CHC";let X=!1;while(q.outs<3){const _=[...q.score],$=S(U,Q,q);if(!$){console.error("\u274C simulateAtBat() returned nothing \u2014 halting");return}if(console.log(`Inning ${q.inning} ${q.top?"\u2191":"\u2193"} \u2014 ${Z}: ${$.batter_id} \u2192 ${$.outcome}`),!q.top&&q.inning>=9&&_[1]<=_[0]&&q.score[1]>q.score[0]){X=!0;break}}if(X)break;const K=!q.top;if(q.top)q.top=!1;else q.top=!0,q.inning++;if(K&&q.inning>=9&&q.score[0]!==q.score[1])break;q.outs=0,q.bases=[0,0,0]}console.log(`\uD83C\uDFC1 Final Score: MIL ${q.score[0]} \u2014 CHC ${q.score[1]}`)}catch(V){console.error("\u274C Error in main():",V)}}d();
